{"version":3,"sources":["components/Header.js","components/Loader.js","components/DisplayAStock.js","components/DisplayStocks.js","components/Search.js","components/AutoUpdate.js","components/DisplayResult.js","util/Constants.js","components/App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","text","AppBar","color","position","Toolbar","className","Typography","variant","Loader","CircularProgress","useStyles","makeStyles","theme","align2","textAlign","flexGrow","align1","spaceHolder","width","paddingRight","DisplayAStock","quote","deleteStock","newStock","useState","isNew","setIsNew","classes","useEffect","symbol","setTimeout","TableRow","TableCell","Fade","in","timeout","enter","exit","Alert","severity","latestPrice","changePercent","toFixed","previousClose","onClick","type","Delete","DisplayStocks","quoteList","style","Fragment","Table","size","TableHead","align","TableBody","map","index","search","display","flexDirection","flexWrap","justifyContent","alignContent","searchInputFile","maxHeight","searchIcon","marginLeft","Search","searchValue","setSearchValue","value","onChange","e","target","preventDefault","root","autoUpdate","fontSize","margin","AutoUpdate","update","handleUpdate","updateText","setUpdateText","updateButtonText","setUpdateButtonText","handleUpdateText","DisplayResult","result","handleAdd","STOCK_SYMBOL_LIST","App","Constants","stockList","setStockList","setQuoteList","searchResultList","setSearchResultList","setErrorMessage","loading","setLoading","setUpdate","count","setCounter","setNewStock","refreshStockQuote","id","setInterval","prevCount","clearInterval","forEach","getQuotes","fetch","then","response","json","jsonResponse","sort","a","b","searchResult","length","CssBaseline","console","log","Error","newStockList","filter","stock","newQuoteList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","finally","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6507b20e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst Header = ({ text }) => {\r\n  return (\r\n    <div>\r\n      <AppBar color='primary' position='fixed'>\r\n        <Toolbar className='App-header'>\r\n          <Typography variant='h4'>{text}</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <CircularProgress color='inherit' />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { TableCell, TableRow, Fade } from '@material-ui/core/';\r\nimport { Delete } from '@material-ui/icons';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  align2: {\r\n    textAlign: 'center',\r\n    flexGrow: 2,\r\n  },\r\n  align1: {\r\n    textAlign: 'center',\r\n    flexGrow: 1,\r\n  },\r\n  spaceHolder: {\r\n    width: '15%',\r\n    paddingRight: 0,\r\n  },\r\n}));\r\n\r\nconst DisplayAStock = ({ quote, deleteStock, newStock }) => {\r\n  const [isNew, setIsNew] = useState(true);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    if (newStock !== quote.symbol) {\r\n      //     console.log('newStock is not symbol');\r\n      setIsNew(false);\r\n    } else {\r\n      setTimeout(() => {\r\n        setIsNew(false);\r\n      }, 5000);\r\n    }\r\n  }, []);\r\n  const handleDelete = () => {\r\n    deleteStock(quote.symbol);\r\n  };\r\n  return (\r\n    <TableRow>\r\n      <TableCell className={classes.spaceHolder}>\r\n        <Fade in={isNew} timeout={{ enter: 0, exit: 1000 }}>\r\n          <Alert severity='success'>New</Alert>\r\n        </Fade>\r\n      </TableCell>\r\n\r\n      <TableCell className={classes.align2}>{quote.symbol}</TableCell>\r\n      <TableCell className={classes.align2}>{quote.latestPrice}</TableCell>\r\n      <TableCell className={classes.align2}>\r\n        {(quote.changePercent * 100).toFixed(2)}%\r\n      </TableCell>\r\n      <TableCell className={classes.align2}>{quote.previousClose}</TableCell>\r\n      <TableCell className={classes.align1}>\r\n        <button onClick={handleDelete} type='submit'>\r\n          <Delete />\r\n        </button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default DisplayAStock;\r\n","import React from 'react';\r\nimport DisplayAStock from './DisplayAStock';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  align2: {\r\n    textAlign: 'center',\r\n    flexGrow: 2,\r\n  },\r\n  align1: {\r\n    textAlign: 'center',\r\n    flexGrow: 1,\r\n  },\r\n  spaceHolder: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst DisplayStocks = ({ quoteList, deleteStock, newStock }) => {\r\n  const classes = useStyles();\r\n  const style = {\r\n    align: 'center',\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Table size='small' className='displayStocks'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align={style.align}></TableCell>\r\n            <TableCell align={style.align}>Symbol</TableCell>\r\n            <TableCell align={style.align}>Current Price</TableCell>\r\n            <TableCell align={style.align}>% Change</TableCell>\r\n            <TableCell align={style.align}>Prev. Closing</TableCell>\r\n            <TableCell></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {quoteList.map((quote, index) => (\r\n            <DisplayAStock\r\n              key={quote.symbol}\r\n              quote={quote}\r\n              deleteStock={deleteStock}\r\n              newStock={newStock}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DisplayStocks;\r\n\r\n// <div className='stocks'>\r\n// {quoteList.map((quote, index) => (\r\n//   <DisplayAStock key={index} quote={quote} deleteStock={handleDelete} />\r\n// ))}\r\n// </div>\r\n","import React, { useState } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    flexGrow: 3,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  searchInputFile: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n\r\n    maxHeight: '30px',\r\n  },\r\n  searchIcon: {\r\n    marginLeft: '10px',\r\n  },\r\n}));\r\n\r\nconst Search = ({ search }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const classes = useStyles();\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    search(searchValue);\r\n    setSearchValue('');\r\n  };\r\n\r\n  return (\r\n    <form className={classes.search}>\r\n      <input\r\n        className={classes.searchInputFile}\r\n        value={searchValue}\r\n        onChange={handleSearchInputChange}\r\n        type='text'\r\n      />\r\n      <div\r\n        onClick={callSearchFunction}\r\n        type='submit'\r\n        className={classes.searchIcon}\r\n      >\r\n        <SearchIcon />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  autoUpdate: {\r\n    flexGrow: 1,\r\n    fontSize: '1rem',\r\n    margin: '5px',\r\n  },\r\n}));\r\n\r\nconst AutoUpdate = ({ update, handleUpdate }) => {\r\n  const [updateText, setUpdateText] = useState();\r\n  const [updateButtonText, setUpdateButtonText] = useState();\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    handleUpdateText();\r\n  }, [update]);\r\n\r\n  const handleUpdateText = () => {\r\n    if (update) {\r\n      setUpdateText('Update every 30sec');\r\n      setUpdateButtonText('Stop');\r\n    } else {\r\n      setUpdateText('Update Stopped');\r\n      setUpdateButtonText('Start');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.autoUpdate}>\r\n      <div>{updateText}</div>\r\n      <button onClick={() => handleUpdate()}> {updateButtonText}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoUpdate;\r\n","import React from \"react\";\r\n\r\n\r\n\r\n  const DisplayResult = ({result, handleAdd}) => {\r\n\r\nconst addThisSymbol = () => {\r\n  handleAdd(result.symbol);\r\n}\r\n    return(\r\n      <button className = \"displayResult\" onClick={addThisSymbol}>\r\n   <h2>{result.symbol}</h2>\r\n </button>\r\n    );\r\n\r\n\r\n\r\n  };\r\n\r\n  export default DisplayResult;","export const QUOTE_API_URL = 'https://cloud.iexapis.com/v1/stock/';\r\nexport const QUOTE_API_URL2 = '/quote';\r\n\r\nexport const STOCK_SYMBOL_LIST = ['AMZN', 'TRIP', 'AAPL', 'TSLA', 'WMT'];\r\n\r\nexport const SEARCH_URL1 = 'https://finnhub.io/api/v1/search?q=';\r\nexport const QUOTE_API_TOKEN = '?token=pk_9d1575de6ba8426b9a036edc8cd74274';\r\nexport const SEARCH_API_TOKEN = '&token=c17tckv48v6reqlb2f90';\r\n","import React, { useState, useEffect } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\nimport DisplayStocks from './DisplayStocks';\r\nimport Search from './Search';\r\nimport AutoUpdate from './AutoUpdate';\r\nimport DisplayResult from './DisplayResult';\r\nimport '../css/App.css';\r\nimport * as Constants from '../util/Constants';\r\n\r\nconst App = () => {\r\n  const [stockList, setStockList] = useState(Constants.STOCK_SYMBOL_LIST);\r\n  const [quoteList, setQuoteList] = useState([]);\r\n  const [searchResultList, setSearchResultList] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [update, setUpdate] = useState(false);\r\n  const [count, setCounter] = useState(0);\r\n  const [newStock, setNewStock] = useState(null);\r\n  useEffect(() => {\r\n    refreshStockQuote();\r\n    let id = setInterval(() => {\r\n      setCounter((prevCount) => prevCount + 1);\r\n    }, 30000);\r\n    return function () {\r\n      clearInterval(id);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log('USE Effect update = ' + update);\r\n\r\n    if (update) refreshStockQuote();\r\n  }, [count]);\r\n\r\n  const refreshStockQuote = () => {\r\n    setQuoteList([]);\r\n    setNewStock(null);\r\n    // console.log('refreshqu newStock = ' + newStock);\r\n    stockList.forEach((symbol) => {\r\n      getQuotes(symbol);\r\n    });\r\n  };\r\n\r\n  const handleAdd = (symbol) => {\r\n    setStockList((stockList) => [...stockList, symbol]);\r\n    setNewStock(symbol);\r\n    getQuotes(symbol);\r\n    setSearchResultList([]);\r\n  };\r\n\r\n  const getQuotes = (symbol) => {\r\n    setLoading(true);\r\n\r\n    fetch(\r\n      Constants.QUOTE_API_URL +\r\n        symbol +\r\n        Constants.QUOTE_API_URL2 +\r\n        Constants.QUOTE_API_TOKEN\r\n    )\r\n      // `{${QUOTE_API_URL}+${symbol}+ ${API_TOKEN}}`)\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        setQuoteList((quoteList) =>\r\n          // sort result alphabetically\r\n          [...quoteList, { ...jsonResponse }].sort((a, b) =>\r\n            a.symbol > b.symbol ? 1 : -1\r\n          )\r\n        );\r\n        setLoading(false);\r\n      });\r\n    //.catch(err => setHasError(true))\r\n  };\r\n\r\n  const search = (searchValue) => {\r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n    fetch(Constants.SEARCH_URL1 + searchValue + Constants.SEARCH_API_TOKEN)\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        if (jsonResponse.result.length > 0) {\r\n          console.log(jsonResponse.result);\r\n          setSearchResultList(jsonResponse.result);\r\n          setLoading(false);\r\n        } else {\r\n          console.log('Search error');\r\n          setErrorMessage(jsonResponse.Error);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deleteStock = (symbol) => {\r\n    const newStockList = stockList.filter((stock) => stock !== symbol);\r\n    setStockList(newStockList);\r\n    const newQuoteList = quoteList.filter((stock) => stock.symbol !== symbol);\r\n    setQuoteList(newQuoteList);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    setUpdate((update) => !update);\r\n  };\r\n\r\n  let searchResult = null;\r\n  if (loading) {\r\n    searchResult = (\r\n      <div className='searchResultWindow'>\r\n        <Loader />\r\n      </div>\r\n    );\r\n  } else if (searchResultList.length > 0) {\r\n    searchResult = (\r\n      <div className='searchResultWindow'>\r\n        <h3>Choose a Symbol to add to the list below</h3>\r\n        <div className='searchResult'>\r\n          {searchResultList.map((result, index) => (\r\n            <DisplayResult key={index} result={result} handleAdd={handleAdd} />\r\n          ))}\r\n        </div>\r\n        <button onClick={() => setSearchResultList([])}>Cancel</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <CssBaseline />\r\n\r\n      <Header text='Stocks' />\r\n      <div className='searchField'>\r\n        <Search search={search} />\r\n        <AutoUpdate update={update} handleUpdate={handleUpdate} />\r\n      </div>\r\n      {searchResult}\r\n\r\n      <DisplayStocks\r\n        quoteList={quoteList}\r\n        deleteStock={deleteStock}\r\n        newStock={newStock}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  // process.env.NODE_ENV === 'production' &&\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        console.log('in localhost SW');\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready\n          .then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          })\n          .finally(() => console.log('SW FINALLY'));\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}